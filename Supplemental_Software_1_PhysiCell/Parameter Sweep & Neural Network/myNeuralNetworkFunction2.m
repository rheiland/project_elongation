function [y1] = myNeuralNetworkFunction2(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 04-Apr-2021 13:14:11.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = Qx5 matrix, input #1
% and returns:
%   y = Qx4 matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0;0;0;0;0];
x1_step1.gain = [2;2;2;2;2];
x1_step1.ymin = -1;

% Layer 1
b1 = [2.5180175983072436985;-2.2411239600670178618;1.4608716502973912998;-0.93081430484710803164;0.92136635925333243424;-1.2317471125250001318;-0.87490726943250529679;2.2066341282089174669;-1.1628470441161773419;1.9068940412511456994];
IW1_1 = [0.18567053444106917937 2.3185783364343839352 0.058199957197895633987 -0.035150902445524781492 0.1055863482241095469;1.5645950660292680112 -0.53614210974558496048 1.4132244831088447423 -1.1584690292890371666 -0.89022761067494227127;-0.68518053644192644658 -2.2608845048727692628 1.4018233926504672926 0.72169025066556746761 1.1595963582170139006;0.18078011491234299846 0.19326202987895949037 -0.096693209170686106324 -1.044593881960110604 0.18946864412927849619;-0.484626840872371345 -0.23444248715881710332 0.028543511920324934894 0.66181404476157001948 -0.18680130076465067956;-1.9545736035408525222 0.31211636579669621572 0.94968708427718673271 -0.32816043918178744443 0.11144600185188222041;-5.8247707081846700206 -0.43125307111090360745 -0.058542383817799921453 -1.1218079418548625448 -0.072340856651424284562;1.4664332463372600213 0.36677139140509074089 2.064295337854956891 -0.70124873048634139838 0.72846562741095999272;-2.2911105231414095051 -0.28645509718884204498 0.027593623202032721564 0.8742358802254905914 -0.17461964022157466792;3.3944430872045097125 0.40778198922433250839 0.030327562571907516753 -0.81448510898248127621 0.26007920813879914501];

% Layer 2
b2 = [-0.054760361770061868891;0.19616605547978607782;-0.30961677441834334346;-0.81322071555685360167];
LW2_1 = [0.11243911653800489625 -0.016615367295280542015 0.01390382836603143088 -0.38805317749592965759 -0.70667202650906457695 0.03617749680624842562 -0.42282102605086763214 -0.02892014493016620974 -0.55510754627129577088 -0.50633742058967545763;0.064363748993917391239 -0.036885650679433321097 9.274403158619727236e-05 -0.24608392655171637542 -0.32068974830604657367 -0.0058518178442917836643 -0.058514306064953683362 -0.0075162545769722841765 -0.30695857862394859694 -0.20916353275983043392;-0.11659247951845116975 -0.0065908874646051609017 -0.013214792698198397913 -0.037134318543856570383 0.029625708625256222395 -0.040345492132982614664 0.29703365842932233365 0.026745878526501214861 0.20432515744096071963 0.14836364235114785082;-0.0025960211961371130671 -0.036662310934696962228 0.016128930900954633471 -0.01273865287498682046 0.099223445629586459749 0.031953423172385857221 -0.16483499677600560451 -0.019694842778844728892 -0.049612542231261172465 -0.019051287580163958624];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [2;2;2;2];
y1_step1.xoffset = [0;0;0;0];

% ===== SIMULATION ========

% Dimensions
Q = size(x1,1); % samples

% Input 1
x1 = x1';
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
y1 = y1';
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
