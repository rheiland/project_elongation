
% 2023.11.08 FX - obtain the Medio-lateral velocity of cells in a given
% space and time from a "Data" parameter generated by simulation.m using
% the gastrulation model of Xiong et al., 2020, adapted in Lu et al.

% the script assumes inputs and outputs of simulation.m are available

% 2023.11.09 FX - add a module to estimate axial stresses and PSM
% compression (essentially reflected in NC convergence and elongation in
% the viscous regime) - so here we use displacement rate of TipN to see the
% pushing stress, while ML speeds of pNC cells shows convergence. The
% pressure (compression) can be obtained from the original model with the
% embedded pressure recorder

% input
tp1=Tcut+10; % starting time point to check
tp2=4000; % ending time point to check
% tissue location, here use PD as an example - PD is defined as the PSM
% cells posterior to the notochord cells, since it's moving, time also
% needs to be specified
Nc=N+NewN;
Output=zeros(size(Data,1),tp2-tp1+1);
Output2=zeros(size(Data,1),tp2-tp1+1);
Output3=zeros(size(Data,1),tp2-tp1+1);

for i=1:size(Data,1)
%T=Data{i,2};
%Y=Data{i,3};
%T1=Data{i,4};
Y1=Data{i,5};
    for j=tp1-Tcut:tp2-Tcut
        cutPD=[Y1(tipN,j)+1,Y1(tipN,j)-5,0,2];
        PDcells=findcell(Y1(:,j),Nc,cutPD);
        PDcells=PDcells(~ismember(PDcells, NCN)); % remove NC cells
        ML=Y1(PDcells+3*Nc,j); q=sign(Y1(PDcells+1*Nc,j));
        ML=ML.*q;
        Output(i,j-(tp1-Tcut)+1)=mean(ML);

        cutpNC=[Y1(tipN,j)+8,Y1(tipN,j)-1,0,2];
        NCcells=findcell(Y1(:,j),Nc,cutPD); 
        NCcells=NCcells(ismember(NCcells, NCN)); % keep only NC cells
        ML2=Y1(NCcells+3*Nc,j); q2=-sign(Y1(NCcells+1*Nc,j));
        ML2=ML2.*q2;
        Output2(i,j-(tp1-Tcut)+1)=mean(ML2);

        Output3(i,j-(tp1-Tcut)+1)=-Y1(tipN+2*Nc,j); %tipN net force on AP
    end

end

%% binning and plotting

time=tp1:1:tp2;
timebin=200; %bin data window size
step=round(length(time)/timebin);
OutputB=zeros(size(Output,1),step);
OutputB2=OutputB;OutputB3=OutputB;
for i=1:size(Output,1)
    for k=1:step-1
        %bt=mean(time((k-1)*timebin+1:k*timebin));
        bo=mean(Output(i,(k-1)*timebin+1:k*timebin));
        OutputB(i,k)=bo;
        bo2=mean(Output2(i,(k-1)*timebin+1:k*timebin));
        OutputB2(i,k)=bo2;
        bo3=mean(Output3(i,(k-1)*timebin+1:k*timebin));
        OutputB3(i,k)=bo3;
    end
end

%figure;hold on;
%plot(bt,bo,'-')
%hold off;